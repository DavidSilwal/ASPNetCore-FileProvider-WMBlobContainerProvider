@page
@model AboutModel
@{
    ViewData["Title"] = "About FileProviders";
}

<div class="container">
    <div class="row" style="padding-top: 50px">
        <div class="col-lg-8 col-md-10 col-sm-12">
            <div class="clearfix"></div>
            <p>
                <img class="img-responsive" src="~/images/lotsofdisk709x502.png" width="354" height="251" alt="">
            </p>
            <p>
                I had a little problem. Unearth sometimes has to store lots of files. Maybe terabytes. It also serves files from external stores
                (such as SharePoint Online or OneDrive or DropBox).
            </p>
            <p>
                Unearth allows users to view many different filetypes on any browser. I found a nice HTML5/Javascript
                PDF Viewer, however it only lets you view static files served from it's host. "SAD". I didn't want to have
                to cache viewed files in the website, or manage the cache and anyway <b>
                    storage in Azure Service Plans is
                    limited
                </b>.
            </p>
            <p>
                BUT: ASP.NET Core! (awesome). <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/file-providers?view=aspnetcore-2.1" target="_blank">FileProviders</a> (cool).
                We can build custom providers to extend the concept of "file store" in our ASP.NET Core apps. They solve this and a host of other problems
                for me. I can have website folders that are actually Azure Blob Containers amongst other things, which is what this demo shows.
            </p>
            <p>
                There are a number of examples of how to build a custom FileProvider that are better than this one. I cut corners, ignored
                concerns, but I did it for a reason: to make the simplest possible sample. This ain't production code but it will point the way.
            </p>
            <p>
            Source code in github: <a href="https://github.com/endintiers/ASPNetCore-FileProvider-WMBlobContainerProvider">ASPNetCore-FileProvider-WMBlobContainerProvider</a>
            and you can find a walkthrough <a href="https://github.com/endintiers/SignalR-AspNetCore-ProgressDemo/blob/master/AsyncPOST.md">here</a>.
            </p>
        </div>
    </div>
</div>
